{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Section/Section.module.css","components/Loader/Loader.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactList/ContactList.module.css","components/Section/Section.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem/ContactItem.js","components/Loader/Loader.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","defaultProps","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","axios","defaults","baseURL","ContactForm","state","name","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","contacts","map","contact","includes","alert","onSubmit","resetForm","this","label","input","type","pattern","required","onChange","button","Component","connect","items","dispatch","post","then","data","catch","error","addContact","onClick","id","delete","deleteContact","item","AppLoader","Loader","style","color","height","width","ContactList","fetchContacts","isLoadingContacts","list","filter","normalizedFilter","toLowerCase","loading","get","App","wrapper","itemsReducer","createReducer","_","payload","filterReducer","action","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7420443.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2bnkH\",\"input\":\"ContactForm_input__1X84w\",\"button\":\"ContactForm_button__3uzBj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3BcJu\",\"title\":\"Section_title__3NOCa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__32SqT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__znR7F\",\"input\":\"Filter_input__1xl-1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2V-Gu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__39Mx-\",\"item\":\"ContactList_item__3ZUEX\",\"name\":\"ContactList_name__-7qk8\",\"number\":\"ContactList_number__3OSBt\",\"button\":\"ContactList_button__QlDxZ\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.defaultProps = {\r\n  title: 'New section',\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const filterContacts = createAction('contacts/filter');\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:7777';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact = contact => dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name } = this.state;\r\n    const names = this.props.contacts.map(contact => contact.name);\r\n\r\n    names.includes(name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : this.props.onSubmit({ ...this.state });\r\n\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { handleSubmit, handleChange } = this;\r\n\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={handleChange}\r\n          ></input>\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { items } }) => ({\r\n  contacts: items,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: contact => {\r\n    return dispatch(addContact(contact));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteContact } from '../../../redux/contacts/contacts-operations';\r\nimport { connect } from 'react-redux';\r\nimport styles from '../ContactList.module.css';\r\n\r\nconst ContactItem = ({ id, name, number, onClick }) => {\r\n  return (\r\n    <li className={styles.item}>\r\n      <p className={styles.name}>{name}</p>\r\n      <p className={styles.number}>{number}</p>\r\n      <button\r\n        className={styles.button}\r\n        type=\"button\"\r\n        onClick={() => onClick(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onClick: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactItem);\r\n\r\nContactItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './Loader.module.css';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nconst AppLoader = () => {\r\n  return (\r\n    <div className={styles.Loader}>\r\n      <Loader\r\n        style={styles}\r\n        type=\"ThreeDots\"\r\n        color=\"#3f51b5\"\r\n        height={100}\r\n        width={100}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppLoader;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport ContactItem from './ContactItem';\r\nimport Loader from '../Loader';\r\nimport styles from './ContactList.module.css';\r\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\r\n\r\nclass ContactList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const contacts = this.props.contacts;\r\n\r\n    return (\r\n      <>\r\n        {this.props.isLoadingContacts && <Loader />}\r\n\r\n        <ul className={styles.list}>\r\n          {contacts.map(contact => {\r\n            const { id, name, number } = contact;\r\n\r\n            return <ContactItem key={id} name={name} number={number} id={id} />;\r\n          })}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst filterContacts = (items, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return items.filter(item =>\r\n    item.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter, loading } }) => ({\r\n  contacts: filterContacts(items, filter),\r\n  isLoadingContacts: loading,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { filterContacts } from '../../redux/contacts/contacts-actions';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { filter } }) => ({\r\n  value: filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: ({ target: { value } }) => dispatch(filterContacts(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Section from './components/Section';\r\nimport ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport styles from './App.module.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n\r\n      <Section title=\"Contacts\">\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContacts,\r\n} from './contacts-actions';\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsRequest]: () => null,\r\n  [fetchContactsError]: (_, action) => action.payload,\r\n  [addContactRequest]: () => null,\r\n  [addContactError]: (_, action) => action.payload,\r\n  [deleteContactRequest]: () => null,\r\n  [deleteContactError]: (_, action) => action.payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n  loading,\r\n  error,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = getDefaultMiddleware({\r\n  serializableCheck: {\r\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n  },\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\n","import './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}